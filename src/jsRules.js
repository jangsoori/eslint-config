const jsRules = {
  // Rules that are not in recommended config
  "array-callback-return": ["error"],
  "no-await-in-loop": ["error"],
  "no-duplicate-imports": ["error"],
  "no-self-compare": ["error"],
  "no-template-curly-in-string": ["error"],
  "no-unreachable-loop": ["error"],
  "no-unused-private-class-members": ["error"],
  "no-use-before-define": ["error"],
  "require-atomic-updates": ["error"],

  // Suggestions
  "arrow-body-style": ["error", "always"],
  "block-scoped-var": ["error"],
  camelcase: [
    "error",
    {
      ignoreDestructuring: true,
      ignoreGlobals: true,
      ignoreImports: true,
      properties: "always",
    },
  ],
  // "capitalized-comments": ["error", "always"],
  "consistent-return": ["error"],
  // curly: ["error", "all"],
  "default-case": ["error"],
  "default-param-last": ["error"],
  "dot-notation": ["error"],
  eqeqeq: ["error", "always"],
  "func-name-matching": ["error"],
  "func-style": ["error", "expression"],
  "grouped-accessor-pairs": ["error"],
  "guard-for-in": ["error"],
  "id-denylist": [
    "error",
    "data",
    "err",
    "e",
    "ev",
    "evt",
    "cb",
    "callback",
    "i",
    "arr",
    "array",
    "obj",
    "object",
  ],
  "id-length": [
    "error",
    {
      exceptions: ["x", "y", "z"],
    },
  ],
  "init-declarations": ["error"],
  "logical-assignment-operators": ["error", "always"],
  "max-depth": ["error"],
  "max-lines": ["error"],
  "max-lines-per-function": ["error"],
  "max-params": ["error", 3],
  "multiline-comment-style": ["error", "starred-block"],
  "new-cap": ["error"],
  "no-alert": "error",
  "no-array-constructor": "error",
  "no-bitwise": "error",
  "no-caller": "error",
  // "no-confusing-arrow": "error",
  "no-console": "error",
  "no-continue": "error",
  "no-div-regex": "error",
  "no-else-return": "error",
  "no-empty-function": "error",
  "no-empty-static-block": "error",
  "no-eval": "error",
  "no-extend-native": "error",
  "no-extra-bind": "error",
  "no-extra-label": "error",
  "no-floating-decimal": "error",
  "no-implicit-coercion": "error",
  "no-implicit-globals": "error",
  "no-implied-eval": "error",
  "no-inline-comments": "error",
  "no-invalid-this": "error",
  "no-iterator": "error",
  "no-lone-blocks": "error",
  "no-lonely-if": "error",
  "no-loop-func": "error",
  /*
   * "no-magic-numbers": [
   *  "error",
   *  {
   *    ignoreArrayIndexes: true,
   *    ignoreDefaultValues: true,
   *    detectObjects: true,
   *  },
   * ], 
   */
  // "no-mixed-operators": "error",
  "no-multi-assign": "error",
  "no-negated-condition": "error",
  "no-nested-ternary": "error",
  "no-new": "error",
  "no-new-wrappers": "error",
  "no-octal-escape": "error",
  "no-param-reassign": "error",
  "no-plusplus": "error",
  "no-proto": "error",
  "no-restricted-syntax": [
    "error",
    {
      selector:
        "CallExpression[callee.name='setInterval'][arguments.length!=2]",
      message: "setInterval must always be invoked with two arguments.",
    },
    {
      selector: "CallExpression[callee.name='setTimeout'][arguments.length!=2]",
      message: "setTimeout must always be invoked with two arguments.",
    },
  ],
  "no-return-assign": "error",
  "no-return-await": "error",
  "no-script-url": "error",
  "no-sequences": "error",
  "no-shadow": "error",
  "no-throw-literal": "error",
  "no-undef-init": "error",
  "no-undefined": "error",
  "no-unneeded-ternary": "error",
  "no-unused-expressions": "error",
  "no-useless-call": "error",
  "no-useless-computed-key": "error",
  "no-useless-concat": "error",
  "no-useless-constructor": "error",
  "no-useless-rename": "error",
  "no-useless-return": "error",
  "no-var": "error",
  "object-shorthand": "error",
  "prefer-arrow-callback": "error",
  "prefer-const": "error",
  "prefer-destructuring": "error",
  "prefer-object-has-own": "error",
  "prefer-object-spread": "error",
  "prefer-promise-reject-errors": "error",
  "prefer-regex-literals": "error",
  "prefer-rest-params": "error",
  "prefer-spread": "error",
  "prefer-template": "error",
  radix: "error",
  "require-await": "error",
  "require-unicode-regexp": "error",
  "sort-imports": "error",
  "sort-keys": [
    "error",
    "asc",
    {
      allowLineSeparatedGroups: true,
    },
  ],
  "spaced-comment": "error",
  yoda: "error",
};

module.exports = { jsRules };
